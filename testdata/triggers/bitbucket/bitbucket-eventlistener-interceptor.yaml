---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
 name: bitbucket-binding
spec:
  params:
  - name: gitrevision
    value: $(body.changes[0].ref.displayId)
  - name: gitrepositoryurl
    value: $(body.repository.links.clone[0].href)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: bitbucket-template
spec:
  params:
    - name: gitrevision
    - name: gitrepositoryurl
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: TaskRun
      metadata:
        generateName: bitbucket-run-
      spec:
        taskSpec:
          resources:
            inputs:
            - name: source
              type: git
          steps:
            - image: image-registry.openshift-image-registry.svc:5000/openshift/golang
              script: |
                #! /bin/bash
                echo "git revision: $(tt.params.gitrevision)"
                echo "git repositoryurl: $(tt.params.gitrepositoryurl)"
                ls -al $(resources.inputs.source.path)
        resources:
          inputs:
            - name: source
              resourceSpec:
                type: git
                params:
                  - name: revision
                    value: $(tt.params.gitrevision)
                  - name: url
                    value: $(tt.params.gitrepositoryurl)   
---    
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
    name: bitbucket-listener
spec:
    serviceAccountName: pipeline
    triggers:
    - name: bitbucket-triggers
      bindings:
        - ref: bitbucket-binding
      interceptors:
        - name: verify-bitbucket-payload
          params:
            - name: secretRef
              value:
                secretKey: secretToken
                secretName: bitbucket-secret
            - name: eventTypes
              value:
                - 'repo:refs_changed'
          ref:
            kind: ClusterInterceptor
            name: bitbucket
      template:
        ref: bitbucket-template
